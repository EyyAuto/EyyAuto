version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-26-alpha
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: build apks
          command: ./gradlew assembleDebug assembleDebugAndroidTest
      - persist_to_workspace:
          root: app/build/outputs/apk/
          paths:
            - debug/*.apk
            - androidTest/debug/*.apk

  unit_test:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-26-alpha
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Unit tests
          command: ./gradlew testDebugUnitTest
      - store_artifacts:
          path: app/build/reports
          destination: reports

  firebase_test:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-26-alpha
    steps:
      - attach_workspace:
          at: apk
      - run:
          name: Store Google Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            sudo gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - run:
          name: Test with Firebase Test Lab
          command: |
            ls apk/debug
            ls apk/androidTest
            sudo gcloud firebase test android run \
              --type instrumentation \
              --app apk/app-debug.apk \
              --test apk/app-debug-androidTest.apk \
              --device model=Nexus6,version=26,orientation=portrait \
              --results-bucket cloud-test-${GOOGLE_PROJECT_ID}
      - run:
          name: Install gsutil dependency and copy test results data
          command: |
            sudo pip install -U crcmod
            sudo gsutil -m cp -r -U `sudo gsutil ls gs://[BUCKET_NAME]/[OBJECT_NAME] | tail -1` ${CIRCLE_ARTIFACTS}/ | true

workflows:
  version: 2

  default:
    jobs:
      - build
      - unit_test:
          requires:
            - build
      - firebase_test:
          requires:
            - build